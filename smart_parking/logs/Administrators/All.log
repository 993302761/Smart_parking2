[20:30:54.967 INFO ] [org.hibernate.validator.internal.util.Version 21 <clinit>] - HV000001: Hibernate Validator 6.1.7.Final
[20:30:55.349 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 256 getRemoteEnvironment] - Fetching config from server at : http://localhost:9999
[20:30:57.065 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 175 log] - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=6f355c97e011fdc3ab393f44b470c6588ce4d109, state=null
[20:30:57.066 INFO ] [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 112 initialize] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[20:30:57.090 INFO ] [org.springframework.boot.SpringApplication 651 logStartupProfileInfo] - No active profile set, falling back to default profiles: default
[20:30:57.763 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[20:30:57.944 INFO ] [org.springframework.data.repository.config.RepositoryConfigurationDelegate 127 registerRepositoriesIn] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[20:30:57.951 INFO ] [org.springframework.data.repository.config.RepositoryConfigurationDelegate 187 registerRepositoriesIn] - Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[20:30:58.091 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[20:30:58.158 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[20:30:58.178 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[20:30:58.355 INFO ] [org.springframework.cloud.context.scope.GenericScope 295 setSerializationId] - BeanFactory id=1e7ccf02-ed22-367d-b7a1-2dbcb112dc57
[20:30:58.366 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 213 registerErrorChannel] - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[20:30:58.373 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 300 registerTaskScheduler] - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[20:30:58.378 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 460 registerHeaderChannelRegistry] - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[20:30:58.661 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.665 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.697 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$39c6ff15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.712 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.716 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.734 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.743 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.757 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:58.762 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[20:30:59.062 INFO ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer 108 initialize] - Tomcat initialized with port(s): 9000 (http)
[20:30:59.072 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Initializing ProtocolHandler ["http-nio-9000"]
[20:30:59.072 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Starting service [Tomcat]
[20:30:59.072 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Starting Servlet engine: [Apache Tomcat/9.0.41]
[20:30:59.157 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Initializing Spring embedded WebApplicationContext
[20:30:59.157 INFO ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 285 prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 2057 ms
[20:30:59.249 WARN ] [com.netflix.config.sources.URLConfigurationSource 126 <init>] - No URLs will be polled as dynamic configuration sources.
[20:30:59.250 INFO ] [com.netflix.config.sources.URLConfigurationSource 127 <init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[20:30:59.259 INFO ] [com.netflix.config.DynamicPropertyFactory 281 getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@21a6a494
[20:30:59.381 INFO ] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar 75 register] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
[20:30:59.852 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 181 initialize] - Initializing ExecutorService 'taskScheduler'
[20:30:59.961 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[20:31:00.333 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[20:31:00.381 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[20:31:01.314 INFO ] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init>] - Exposing 23 endpoint(s) beneath base path '/actuator'
[20:31:01.391 INFO ] [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping 69 initHandlerMethods] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[20:31:01.424 WARN ] [com.netflix.config.sources.URLConfigurationSource 126 <init>] - No URLs will be polled as dynamic configuration sources.
[20:31:01.424 INFO ] [com.netflix.config.sources.URLConfigurationSource 127 <init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[20:31:01.509 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 181 initialize] - Initializing ExecutorService 'applicationTaskExecutor'
[20:31:01.757 INFO ] [org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar 755 afterPropertiesSet] - Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[20:31:01.992 INFO ] [com.zaxxer.hikari.HikariDataSource 110 getConnection] - HikariPool-1 - Starting...
[20:31:02.402 INFO ] [com.zaxxer.hikari.HikariDataSource 123 getConnection] - HikariPool-1 - Start completed.
[20:31:02.506 INFO ] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration 78 discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
[20:31:02.560 WARN ] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning] - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[20:31:02.718 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[20:31:02.846 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 767 registerChannel] - Registering MessageChannel springCloudBusInput
[20:31:02.908 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 767 registerChannel] - Registering MessageChannel nullChannel
[20:31:02.923 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 767 registerChannel] - Registering MessageChannel errorChannel
[20:31:02.980 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 767 registerChannel] - Registering MessageChannel springCloudBusOutput
[20:31:02.995 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 785 registerHandler] - Registering MessageHandler org.springframework.cloud.stream.binding.StreamListenerMessageHandler@f500481
[20:31:03.082 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 785 registerHandler] - Registering MessageHandler errorLogger
[20:31:03.115 INFO ] [org.springframework.integration.endpoint.EventDrivenConsumer 107 logComponentSubscriptionEvent] - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[20:31:03.116 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.errorChannel' has 1 subscriber(s).
[20:31:03.116 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 163 start] - started bean '_org.springframework.integration.errorLogger'
[20:31:03.140 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 243 getBinderInstance] - Creating binder: rabbit
[20:31:03.222 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 256 getRemoteEnvironment] - Fetching config from server at : http://localhost:9999
[20:31:05.773 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 175 log] - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=6f355c97e011fdc3ab393f44b470c6588ce4d109, state=null
[20:31:05.773 INFO ] [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 112 initialize] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[20:31:05.903 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 365 getBinderInstance] - Caching the binder: rabbit
[20:31:05.903 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 369 getBinderInstance] - Retrieving cached binder: rabbit
[20:31:06.022 INFO ] [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory 558 connectAddresses] - Attempting to connect to: [localhost:5672]
[20:31:06.065 INFO ] [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory 511 createBareConnection] - Created new connection: rabbitConnectionFactory#511d568f:0/SimpleConnection@3fa13835 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56328]
[20:31:06.106 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[20:31:06.114 INFO ] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory 72 create] - Setting initial instance status as: STARTING
[20:31:06.140 INFO ] [com.netflix.discovery.DiscoveryClient 372 <init>] - Initializing Eureka in region us-east-1
[20:31:06.175 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 70 <init>] - Using JSON encoding codec LegacyJacksonJson
[20:31:06.175 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 71 <init>] - Using JSON decoding codec LegacyJacksonJson
[20:31:06.276 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 80 <init>] - Using XML encoding codec XStreamXml
[20:31:06.277 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 81 <init>] - Using XML decoding codec XStreamXml
[20:31:06.403 INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver 43 getClusterEndpoints] - Resolving eureka endpoints via configuration
[20:31:06.419 INFO ] [com.netflix.discovery.DiscoveryClient 1007 fetchRegistry] - Disable delta property : false
[20:31:06.419 INFO ] [com.netflix.discovery.DiscoveryClient 1008 fetchRegistry] - Single vip registry refresh property : null
[20:31:06.420 INFO ] [com.netflix.discovery.DiscoveryClient 1009 fetchRegistry] - Force full registry fetch : false
[20:31:06.420 INFO ] [com.netflix.discovery.DiscoveryClient 1010 fetchRegistry] - Application is null : false
[20:31:06.420 INFO ] [com.netflix.discovery.DiscoveryClient 1011 fetchRegistry] - Registered Applications size is zero : true
[20:31:06.420 INFO ] [com.netflix.discovery.DiscoveryClient 1013 fetchRegistry] - Application version is -1: true
[20:31:06.420 INFO ] [com.netflix.discovery.DiscoveryClient 1097 getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
[20:31:06.518 INFO ] [com.netflix.discovery.DiscoveryClient 1106 getAndStoreFullRegistry] - The response status is 200
[20:31:06.523 INFO ] [com.netflix.discovery.DiscoveryClient 1321 initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
[20:31:06.526 INFO ] [com.netflix.discovery.InstanceInfoReplicator 60 <init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[20:31:06.529 INFO ] [com.netflix.discovery.DiscoveryClient 492 <init>] - Discovery Client initialized at timestamp 1662553866528 with initial instances count: 2
[20:31:06.534 INFO ] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry 41 register] - Registering application CLIENTADMINISTRATORS with eureka with status UP
[20:31:06.535 INFO ] [com.netflix.discovery.DiscoveryClient$3 1352 notify] - Saw local status change event StatusChangeEvent [timestamp=1662553866535, current=UP, previous=STARTING]
[20:31:06.537 INFO ] [com.netflix.discovery.DiscoveryClient 873 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[20:31:06.537 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 369 getBinderInstance] - Retrieving cached binder: rabbit
[20:31:06.577 INFO ] [com.netflix.discovery.DiscoveryClient 882 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[20:31:06.604 INFO ] [org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner 237 doProvisionConsumerDestination] - declaring queue for inbound: springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w, bound to: springCloudBus
[20:31:06.627 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w.errors' has 1 subscriber(s).
[20:31:06.627 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w.errors' has 2 subscriber(s).
[20:31:06.646 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 163 start] - started bean 'inbound.springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w'
[20:31:06.649 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Starting ProtocolHandler ["http-nio-9000"]
[20:31:06.672 INFO ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer 220 start] - Tomcat started on port(s): 9000 (http) with context path ''
[20:31:06.673 INFO ] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration 145 onApplicationEvent] - Updating port to 9000
[20:31:06.679 INFO ] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 160 start] - Context refreshed
[20:31:06.690 INFO ] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 163 start] - Found 1 custom documentation plugin(s)
[20:31:06.735 INFO ] [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner 41 scan] - Scanning for api listing references
[20:31:06.854 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 767 registerChannel] - Registering MessageChannel springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w.errors
[20:31:06.934 INFO ] [org.springframework.boot.StartupInfoLogger 61 logStarted] - Started AdministratorsApplication in 12.23 seconds (JVM running for 12.874)
[20:31:07.451 INFO ] [org.apache.juli.logging.DirectJDKLog 173 log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[20:31:07.452 INFO ] [org.springframework.web.servlet.FrameworkServlet 525 initServletBean] - Initializing Servlet 'dispatcherServlet'
[20:31:07.463 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 256 getRemoteEnvironment] - Fetching config from server at : http://localhost:9999
[20:31:07.464 INFO ] [org.springframework.web.servlet.FrameworkServlet 547 initServletBean] - Completed initialization in 12 ms
[20:31:08.256 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 175 log] - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=6f355c97e011fdc3ab393f44b470c6588ce4d109, state=null
[20:31:33.123 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientUser.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:31:33.131 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 58 <init>] - Shutdown hook installed for: NFLoadBalancer-PingTimer-ClientUser
[20:31:33.131 INFO ] [com.netflix.loadbalancer.BaseLoadBalancer 197 initWithConfig] - Client: ClientUser instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientUser,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[20:31:33.135 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 222 enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
[20:31:33.138 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 150 restOfInit] - DynamicServerListLoadBalancer for client ClientUser initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientUser,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@27c6a00c
[20:31:33.161 ERROR] [com.feign.api.service.UserFeignServiceDegradation$1 25 getAllUsers] - getAllUsers 服务出现异常，异常信息：java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: ClientUser
[20:32:04.165 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientUser.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:32:31.062 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientParkingLots.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:32:31.064 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 58 <init>] - Shutdown hook installed for: NFLoadBalancer-PingTimer-ClientParkingLots
[20:32:31.064 INFO ] [com.netflix.loadbalancer.BaseLoadBalancer 197 initWithConfig] - Client: ClientParkingLots instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientParkingLots,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[20:32:31.066 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 222 enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
[20:32:31.067 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientParkingLots.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:32:31.068 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 150 restOfInit] - DynamicServerListLoadBalancer for client ClientParkingLots initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientParkingLots,current list of Servers=[10.12.65.75:9002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.12.65.75:9002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@64c88855
[20:32:32.068 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientParkingLots.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:33:24.294 ERROR] [com.feign.api.service.ParkingLotFeignServiceDegradation$1 26 getAllParking] - getAllParking 服务出现异常，异常信息：feign.RetryableException: Connect to 10.12.65.75:9002 [/10.12.65.75] failed: 拒绝连接 (Connection refused) executing GET http://ClientParkingLots/ParkingLots/getAllParking
[20:35:00.737 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientOrder.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:35:00.738 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 58 <init>] - Shutdown hook installed for: NFLoadBalancer-PingTimer-ClientOrder
[20:35:00.738 INFO ] [com.netflix.loadbalancer.BaseLoadBalancer 197 initWithConfig] - Client: ClientOrder instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientOrder,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[20:35:00.739 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 222 enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
[20:35:00.741 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientOrder.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:35:00.741 INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer 150 restOfInit] - DynamicServerListLoadBalancer for client ClientOrder initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=ClientOrder,current list of Servers=[10.12.65.75:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.12.65.75:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3a461705
[20:35:01.743 INFO ] [com.netflix.config.ChainedDynamicProperty$ChainLink 115 checkAndFlip] - Flipping property: ClientOrder.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[20:36:06.422 INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver 43 getClusterEndpoints] - Resolving eureka endpoints via configuration
[20:37:06.056 ERROR] [com.feign.api.service.OrderFeignServiceDegradation$1 25 getAllOrders] - getAllOrders 服务出现异常，异常信息：feign.RetryableException: Connect to 10.12.65.75:9001 [/10.12.65.75] failed: 拒绝连接 (Connection refused) executing GET http://ClientOrder/Order/getAllOrders
[20:37:56.253 ERROR] [com.feign.api.service.ParkingLotFeignServiceDegradation$1 64 updateParking] - updateParking 服务出现异常，异常信息：java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: ClientParkingLots
[20:40:49.895 INFO ] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2 53 run] - Shutting down the Executor Pool for PollingServerListUpdater
[20:40:49.895 INFO ] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry 65 deregister] - Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[20:40:49.895 INFO ] [com.netflix.discovery.DiscoveryClient$3 1352 notify] - Saw local status change event StatusChangeEvent [timestamp=1662554449895, current=DOWN, previous=UP]
[20:40:49.896 INFO ] [com.netflix.discovery.DiscoveryClient 873 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[20:40:49.898 INFO ] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient 93 execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8651/eureka/} exception=java.net.ConnectException: 拒绝连接 (Connection refused) stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: 拒绝连接 (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: 拒绝连接 (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

[20:40:49.899 WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient 130 execute] - Request execution failed with message: java.net.ConnectException: 拒绝连接 (Connection refused)
[20:40:49.900 INFO ] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient 84 execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8651/eureka/}, exception=java.net.ConnectException: 拒绝连接 (Connection refused) stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: 拒绝连接 (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: 拒绝连接 (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

[20:40:49.900 WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient 130 execute] - Request execution failed with message: java.net.ConnectException: 拒绝连接 (Connection refused)
[20:40:49.900 INFO ] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient 84 execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8652/eureka/}, exception=java.net.ConnectException: 拒绝连接 (Connection refused) stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: 拒绝连接 (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: 拒绝连接 (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

[20:40:49.901 WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient 130 execute] - Request execution failed with message: java.net.ConnectException: 拒绝连接 (Connection refused)
[20:40:49.901 WARN ] [com.netflix.discovery.DiscoveryClient 878 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration failed Retry limit reached; giving up on completing the request com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:139) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) [eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.10.14.jar:1.10.14]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_251]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_251]

[20:40:49.904 WARN ] [com.netflix.discovery.InstanceInfoReplicator 125 run] - There was a problem with the instance info replicator com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:139) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.10.14.jar:1.10.14]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_251]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_251]

[20:40:49.925 INFO ] [org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer 646 doShutdown] - Waiting for workers to finish.
[20:40:50.767 INFO ] [org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer 649 doShutdown] - Successfully waited for workers to finish.
[20:40:50.768 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 181 stop] - stopped bean 'inbound.springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w'
[20:40:50.773 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w.errors' has 1 subscriber(s).
[20:40:50.776 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBus.anonymous.d2FuoenDSfOqEnx4T0Xv1w.errors' has 0 subscriber(s).
[20:40:50.786 INFO ] [org.springframework.integration.endpoint.EventDrivenConsumer 107 logComponentSubscriptionEvent] - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[20:40:50.787 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.errorChannel' has 0 subscriber(s).
[20:40:50.788 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 199 stop] - stopped bean '_org.springframework.integration.errorLogger'
[20:40:50.795 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 218 shutdown] - Shutting down ExecutorService 'applicationTaskExecutor'
[20:40:50.849 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 67 cancel] - Shutdown hook removed for: NFLoadBalancer-PingTimer-ClientParkingLots
[20:40:50.850 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 72 cancel] - Exception caught (might be ok if at shutdown) java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_251]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_251]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) [netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_251]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_251]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_251]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93) [spring-cloud-context-2.2.9.RELEASE.jar:2.2.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170) [spring-boot-2.3.8.RELEASE.jar:2.3.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]

[20:40:50.853 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 67 cancel] - Shutdown hook removed for: NFLoadBalancer-PingTimer-ClientUser
[20:40:50.854 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 72 cancel] - Exception caught (might be ok if at shutdown) java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_251]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_251]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) [netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_251]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_251]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_251]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93) [spring-cloud-context-2.2.9.RELEASE.jar:2.2.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170) [spring-boot-2.3.8.RELEASE.jar:2.3.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]

[20:40:50.856 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 67 cancel] - Shutdown hook removed for: NFLoadBalancer-PingTimer-ClientOrder
[20:40:50.856 INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer 72 cancel] - Exception caught (might be ok if at shutdown) java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_251]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_251]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) [netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_251]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_251]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_251]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93) [spring-cloud-context-2.2.9.RELEASE.jar:2.2.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170) [spring-boot-2.3.8.RELEASE.jar:2.3.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]

[20:40:50.861 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 218 shutdown] - Shutting down ExecutorService 'taskScheduler'
[20:40:50.866 INFO ] [com.zaxxer.hikari.HikariDataSource 350 close] - HikariPool-1 - Shutdown initiated...
[20:40:50.874 INFO ] [com.zaxxer.hikari.HikariDataSource 352 close] - HikariPool-1 - Shutdown completed.
[20:40:50.878 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 495 destroy] - Summary on shutdown: bean 'springCloudBusInput'
[20:40:50.878 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 495 destroy] - Summary on shutdown: nullChannel
[20:40:50.878 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 495 destroy] - Summary on shutdown: bean 'errorChannel'
[20:40:50.878 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 495 destroy] - Summary on shutdown: bean 'springCloudBusOutput'
[20:40:50.878 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 498 destroy] - Summary on shutdown: org.springframework.cloud.stream.binding.StreamListenerMessageHandler@f500481
[20:40:50.879 INFO ] [org.springframework.integration.monitor.IntegrationMBeanExporter 498 destroy] - Summary on shutdown: bean '_org.springframework.integration.errorLogger.handler' for component '_org.springframework.integration.errorLogger'
[20:40:50.879 INFO ] [com.netflix.discovery.DiscoveryClient 935 shutdown] - Shutting down DiscoveryClient ...
[20:40:53.881 INFO ] [com.netflix.discovery.DiscoveryClient 971 unregister] - Unregistering ...
[20:40:53.883 INFO ] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient 84 execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8651/eureka/}, exception=java.net.ConnectException: 拒绝连接 (Connection refused) stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: 拒绝连接 (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: 拒绝连接 (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

[20:40:53.883 WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient 130 execute] - Request execution failed with message: java.net.ConnectException: 拒绝连接 (Connection refused)
[20:40:53.884 INFO ] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient 84 execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8652/eureka/}, exception=java.net.ConnectException: 拒绝连接 (Connection refused) stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: 拒绝连接 (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: 拒绝连接 (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

[20:40:53.885 WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient 130 execute] - Request execution failed with message: java.net.ConnectException: 拒绝连接 (Connection refused)
[20:40:53.885 ERROR] [com.netflix.discovery.DiscoveryClient 975 unregister] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - de-registration failedCannot execute request on any known server com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972) [eureka-client-1.10.14.jar:1.10.14]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948) [eureka-client-1.10.14.jar:1.10.14]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_251]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_251]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_251]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403) [spring-cloud-context-2.2.9.RELEASE.jar:2.2.9.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142) [spring-cloud-context-2.2.9.RELEASE.jar:2.2.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085) [spring-beans-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170) [spring-boot-2.3.8.RELEASE.jar:2.3.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949) [spring-context-5.2.12.RELEASE.jar:5.2.12.RELEASE]

[20:40:53.894 INFO ] [com.netflix.discovery.DiscoveryClient 960 shutdown] - Completed shut down of DiscoveryClient
