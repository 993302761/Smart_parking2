//编译时用到的依赖
buildscript {
    ext {
        //定义一个变量，统一规定springboot的版本
        springBootVersion = '2.2.2.RELEASE'
        springCloudVersion = 'Hoxton.SR1'
        netflixVersion = '2.2.1.RELEASE'
    }
    repositories {
        mavenLocal()        //本地仓库
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()      //中心仓库
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.5")
    }

}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'  // 使用spring boot的版本
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'  // 使用spring boot的自动依赖管理
    id 'java'
    id 'idea'
}

//project全局的版本及相关插件
allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
    }
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}



//设定子项目中的配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    //spring boot 插件
    apply plugin: 'org.springframework.boot'
    //A Gradle plugin that provides Maven-like dependency management functionality
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation ('org.springframework.boot:spring-boot-starter-web')
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        testImplementation("junit:junit:${junit_version}")


        //一个Lombok为啥写这么多？因为gradle5.0以上的版本都需要手动指定Lombok在编译期使用
        compileOnly("org.projectlombok:lombok:${lombok_version}")
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")
        testCompileOnly("org.projectlombok:lombok:${lombok_version}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombok_version}")


    }


    //确定spring cloud版本并且确定是否与当前spring boot版本对应
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-netflix:${netflixVersion}"
        }
    }
    jar {
        manifest.attributes smart_parking: 'gradle'
    }

}

