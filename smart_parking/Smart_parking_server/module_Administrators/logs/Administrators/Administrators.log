[2022-08-29 19:43:56.681] [INFO ] org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:308) org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[2022-08-29 19:43:56.688] [INFO ] org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2022-08-29 19:43:56.689] [INFO ] org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2022-08-29 19:43:56.771] [INFO ] org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:237) org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[2022-08-29 19:43:56.858] [INFO ] org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:248) org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[2022-08-29 19:43:56.868] [INFO ] org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:177) org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@708400f6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5829e4f4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4218500f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4bff64c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1b2c4efb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@c35172e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@c2db68f, org.springframework.test.context.event.EventPublishingTestExecutionListener@3cc41abc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4566d049, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@61ce23ac, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3668d4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1c3b9394, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6f2cfcc2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7f6f61c8]
[2022-08-29 19:43:57.111] [INFO ] org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
[2022-08-29 19:43:57.525] [INFO ] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) org.springframework.cloud.config.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:9999
[2022-08-29 19:43:58.422] [INFO ] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) org.springframework.cloud.config.client.ConfigServicePropertySourceLocator - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 19:43:58.424] [INFO ] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 19:43:58.437] [INFO ] org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) com.example.administrators.ModuleRegisterApplicationTests - No active profile set, falling back to default profiles: default
[2022-08-29 19:43:59.116] [WARN ] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) org.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 19:43:59.267] [INFO ] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[2022-08-29 19:43:59.274] [INFO ] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[2022-08-29 19:43:59.300] [WARN ] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) org.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 19:43:59.350] [WARN ] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) org.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 19:43:59.517] [INFO ] org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) org.springframework.cloud.context.scope.GenericScope - BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[2022-08-29 19:43:59.579] [INFO ] org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:213) org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[2022-08-29 19:43:59.583] [INFO ] org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:300) org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[2022-08-29 19:43:59.587] [INFO ] org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerHeaderChannelRegistry(DefaultConfiguringBeanFactoryPostProcessor.java:460) org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[2022-08-29 19:43:59.798] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:43:59.801] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:43:59.824] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$ca6dcdff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:43:59.835] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:43:59.838] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:43:59.855] [INFO ] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 19:44:00.312] [WARN ] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[2022-08-29 19:44:00.313] [INFO ] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 19:44:00.323] [INFO ] com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16e907b6
[2022-08-29 19:44:00.517] [INFO ] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
[2022-08-29 19:44:00.601] [INFO ] org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) org.springframework.cloud.openfeign.FeignClientFactoryBean - For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 19:44:00.841] [INFO ] org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) org.springframework.cloud.openfeign.FeignClientFactoryBean - For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 19:44:00.865] [INFO ] org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) org.springframework.cloud.openfeign.FeignClientFactoryBean - For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 19:44:01.709] [INFO ] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-08-29 19:44:01.939] [INFO ] springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2022-08-29 19:44:02.027] [WARN ] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[2022-08-29 19:44:02.027] [INFO ] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 19:44:02.145] [INFO ] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[2022-08-29 19:44:02.437] [INFO ] org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar.afterPropertiesSet(FunctionConfiguration.java:755) org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar - Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[2022-08-29 19:44:02.620] [INFO ] com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-08-29 19:44:02.797] [INFO ] com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-08-29 19:44:02.913] [INFO ] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:78) org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
[2022-08-29 19:44:02.957] [WARN ] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 19:44:03.124] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.messaging.DirectWithAttributesChannel - Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[2022-08-29 19:44:03.137] [INFO ] org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 19:44:03.138] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.integration.channel.PublishSubscribeChannel - Channel 'application-1.errorChannel' has 1 subscriber(s).
[2022-08-29 19:44:03.138] [INFO ] org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) org.springframework.integration.endpoint.EventDrivenConsumer - started bean '_org.springframework.integration.errorLogger'
[2022-08-29 19:44:03.140] [INFO ] org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:243) org.springframework.cloud.stream.binder.DefaultBinderFactory - Creating binder: rabbit
[2022-08-29 19:44:03.206] [INFO ] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) org.springframework.cloud.config.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:9999
[2022-08-29 19:44:04.209] [INFO ] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) org.springframework.cloud.config.client.ConfigServicePropertySourceLocator - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 19:44:04.210] [INFO ] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 19:44:04.297] [INFO ] org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:365) org.springframework.cloud.stream.binder.DefaultBinderFactory - Caching the binder: rabbit
[2022-08-29 19:44:04.298] [INFO ] org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) org.springframework.cloud.stream.binder.DefaultBinderFactory - Retrieving cached binder: rabbit
[2022-08-29 19:44:04.377] [INFO ] org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:558) org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
[2022-08-29 19:44:04.423] [INFO ] org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:511) org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#17d19538:0/SimpleConnection@292237cd [delegate=amqp://guest@127.0.0.1:5672/, localPort= 47784]
[2022-08-29 19:44:04.448] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.messaging.DirectWithAttributesChannel - Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[2022-08-29 19:44:04.459] [INFO ] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
[2022-08-29 19:44:04.489] [INFO ] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:372) com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[2022-08-29 19:44:04.527] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[2022-08-29 19:44:04.528] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[2022-08-29 19:44:04.623] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[2022-08-29 19:44:04.623] [INFO ] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[2022-08-29 19:44:04.752] [INFO ] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[2022-08-29 19:44:04.765] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1007) com.netflix.discovery.DiscoveryClient - Disable delta property : false
[2022-08-29 19:44:04.766] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1008) com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[2022-08-29 19:44:04.766] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1009) com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[2022-08-29 19:44:04.766] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1010) com.netflix.discovery.DiscoveryClient - Application is null : false
[2022-08-29 19:44:04.766] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1011) com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[2022-08-29 19:44:04.767] [INFO ] com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1013) com.netflix.discovery.DiscoveryClient - Application version is -1: true
[2022-08-29 19:44:04.767] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1097) com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[2022-08-29 19:44:04.847] [INFO ] com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1106) com.netflix.discovery.DiscoveryClient - The response status is 200
[2022-08-29 19:44:04.849] [INFO ] com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1321) com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[2022-08-29 19:44:04.852] [INFO ] com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-08-29 19:44:04.854] [INFO ] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:492) com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1661773444854 with initial instances count: 4
[2022-08-29 19:44:04.859] [INFO ] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application CLIENTADMINISTRATORS with eureka with status UP
[2022-08-29 19:44:04.859] [INFO ] com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1661773444859, current=UP, previous=STARTING]
[2022-08-29 19:44:04.861] [INFO ] com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) com.netflix.discovery.DiscoveryClient - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 19:44:04.862] [INFO ] org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) org.springframework.cloud.stream.binder.DefaultBinderFactory - Retrieving cached binder: rabbit
[2022-08-29 19:44:04.892] [INFO ] com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) com.netflix.discovery.DiscoveryClient - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 19:44:04.903] [INFO ] org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner.doProvisionConsumerDestination(RabbitExchangeQueueProvisioner.java:237) org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner - declaring queue for inbound: springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA, bound to: springCloudBus
[2022-08-29 19:44:04.925] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.binder.BinderErrorChannel - Channel 'springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA.errors' has 1 subscriber(s).
[2022-08-29 19:44:04.925] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.binder.BinderErrorChannel - Channel 'springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA.errors' has 2 subscriber(s).
[2022-08-29 19:44:04.938] [INFO ] org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter - started bean 'inbound.springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA'
[2022-08-29 19:44:04.939] [INFO ] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
[2022-08-29 19:44:04.949] [INFO ] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
[2022-08-29 19:44:04.985] [INFO ] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
[2022-08-29 19:44:05.104] [INFO ] org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) com.example.administrators.ModuleRegisterApplicationTests - Started ModuleRegisterApplicationTests in 8.183 seconds (JVM running for 9.222)
[2022-08-29 19:44:05.244] [ERROR] com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) com.example.administrators.ModuleRegisterApplicationTests - 打印error
[2022-08-29 19:44:05.244] [WARN ] com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) com.example.administrators.ModuleRegisterApplicationTests - 打印warn
[2022-08-29 19:44:05.244] [INFO ] com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:20) com.example.administrators.ModuleRegisterApplicationTests - 打印info
[2022-08-29 19:44:05.258] [INFO ] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[2022-08-29 19:44:05.258] [INFO ] com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1661773445258, current=DOWN, previous=UP]
[2022-08-29 19:44:05.259] [INFO ] com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) com.netflix.discovery.DiscoveryClient - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 19:44:05.262] [INFO ] com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) com.netflix.discovery.DiscoveryClient - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 19:44:05.266] [INFO ] org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:646) org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
[2022-08-29 19:44:05.942] [INFO ] org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:649) org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
[2022-08-29 19:44:05.942] [INFO ] org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:181) org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter - stopped bean 'inbound.springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA'
[2022-08-29 19:44:05.950] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.binder.BinderErrorChannel - Channel 'application-1.springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA.errors' has 1 subscriber(s).
[2022-08-29 19:44:05.952] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.cloud.stream.binder.BinderErrorChannel - Channel 'application-1.springCloudBus.anonymous.-4p8Ue-FR46pIRqspHINdA.errors' has 0 subscriber(s).
[2022-08-29 19:44:05.957] [INFO ] org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) org.springframework.integration.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 19:44:05.958] [INFO ] org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) org.springframework.integration.channel.PublishSubscribeChannel - Channel 'application-1.errorChannel' has 0 subscriber(s).
[2022-08-29 19:44:05.958] [INFO ] org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:199) org.springframework.integration.endpoint.EventDrivenConsumer - stopped bean '_org.springframework.integration.errorLogger'
[2022-08-29 19:44:05.962] [INFO ] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
[2022-08-29 19:44:05.975] [INFO ] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
[2022-08-29 19:44:05.981] [INFO ] com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-08-29 19:44:05.998] [INFO ] com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-08-29 19:44:05.999] [INFO ] com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:935) com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
[2022-08-29 19:44:09.007] [INFO ] com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:971) com.netflix.discovery.DiscoveryClient - Unregistering ...
[2022-08-29 19:44:09.016] [INFO ] com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:973) com.netflix.discovery.DiscoveryClient - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[2022-08-29 19:44:09.034] [INFO ] com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:960) com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
[2022-08-29 20:02:43] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:308) --- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[2022-08-29 20:02:43] INFO:org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) --- Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2022-08-29 20:02:43] INFO:org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) --- Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2022-08-29 20:02:43] INFO:org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:237) --- Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[2022-08-29 20:02:43] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:248) --- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[2022-08-29 20:02:43] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:177) --- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4218500f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bff64c2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b2c4efb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c35172e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c2db68f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3cc41abc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4566d049, org.springframework.test.context.event.EventPublishingTestExecutionListener@61ce23ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3668d4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c3b9394, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6f2cfcc2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f6f61c8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4c2cc639, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ccb4b1b]
[2022-08-29 20:02:43] INFO:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) --- HV000001: Hibernate Validator 6.1.7.Final
[2022-08-29 20:02:44] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:02:45] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:02:45] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:02:45] INFO:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) --- No active profile set, falling back to default profiles: default
[2022-08-29 20:02:45] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:02:46] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) --- Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[2022-08-29 20:02:46] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) --- Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[2022-08-29 20:02:46] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:02:46] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:02:46] INFO:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) --- BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[2022-08-29 20:02:46] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:213) --- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[2022-08-29 20:02:46] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:300) --- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[2022-08-29 20:02:46] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerHeaderChannelRegistry(DefaultConfiguringBeanFactoryPostProcessor.java:460) --- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$52e2bc92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:46] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:02:47] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:02:47] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:02:47] INFO:com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) --- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d2046bb
[2022-08-29 20:02:47] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'taskScheduler'
[2022-08-29 20:02:47] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:02:47] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:02:47] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:02:48] INFO:org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) --- Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-08-29 20:02:48] INFO:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) --- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2022-08-29 20:02:48] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:02:49] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:02:49] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:02:49] INFO:org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar.afterPropertiesSet(FunctionConfiguration.java:755) --- Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[2022-08-29 20:02:49] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) --- HikariPool-1 - Starting...
[2022-08-29 20:02:49] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) --- HikariPool-1 - Start completed.
[2022-08-29 20:02:49] INFO:org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:78) --- Eureka HTTP Client uses Jersey
[2022-08-29 20:02:49] WARN:org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) --- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 20:02:50] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[2022-08-29 20:02:50] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:02:50] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 1 subscriber(s).
[2022-08-29 20:02:50] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:02:50] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:243) --- Creating binder: rabbit
[2022-08-29 20:02:50] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:02:51] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:02:51] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:02:51] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:365) --- Caching the binder: rabbit
[2022-08-29 20:02:51] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:02:51] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:558) --- Attempting to connect to: [localhost:5672]
[2022-08-29 20:02:51] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:511) --- Created new connection: rabbitConnectionFactory#22f046b:0/SimpleConnection@10587ce5 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 34746]
[2022-08-29 20:02:51] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[2022-08-29 20:02:51] INFO:org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) --- Setting initial instance status as: STARTING
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:372) --- Initializing Eureka in region us-east-1
[2022-08-29 20:02:51] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) --- Using JSON encoding codec LegacyJacksonJson
[2022-08-29 20:02:51] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) --- Using JSON decoding codec LegacyJacksonJson
[2022-08-29 20:02:51] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) --- Using XML encoding codec XStreamXml
[2022-08-29 20:02:51] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) --- Using XML decoding codec XStreamXml
[2022-08-29 20:02:51] INFO:com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) --- Resolving eureka endpoints via configuration
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1007) --- Disable delta property : false
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1008) --- Single vip registry refresh property : null
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1009) --- Force full registry fetch : false
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1010) --- Application is null : false
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1011) --- Registered Applications size is zero : true
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1013) --- Application version is -1: true
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1097) --- Getting all instance registry info from the eureka server
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1106) --- The response status is 200
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1321) --- Starting heartbeat executor: renew interval is: 30
[2022-08-29 20:02:51] INFO:com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) --- InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:492) --- Discovery Client initialized at timestamp 1661774571706 with initial instances count: 3
[2022-08-29 20:02:51] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) --- Registering application CLIENTADMINISTRATORS with eureka with status UP
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661774571712, current=UP, previous=STARTING]
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:02:51] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:02:51] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:02:51] INFO:org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner.doProvisionConsumerDestination(RabbitExchangeQueueProvisioner.java:237) --- declaring queue for inbound: springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg, bound to: springCloudBus
[2022-08-29 20:02:51] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg.errors' has 1 subscriber(s).
[2022-08-29 20:02:51] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg.errors' has 2 subscriber(s).
[2022-08-29 20:02:51] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean 'inbound.springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg'
[2022-08-29 20:02:51] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) --- Context refreshed
[2022-08-29 20:02:51] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) --- Found 1 custom documentation plugin(s)
[2022-08-29 20:02:51] INFO:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) --- Scanning for api listing references
[2022-08-29 20:02:51] INFO:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) --- Started ModuleRegisterApplicationTests in 8.163 seconds (JVM running for 9.277)
[2022-08-29 20:02:52] ERROR:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) --- 打印error
[2022-08-29 20:02:52] WARN:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) --- 打印warn
[2022-08-29 20:02:52] INFO:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:20) --- 打印info
[2022-08-29 20:02:52] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) --- Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[2022-08-29 20:02:52] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661774572103, current=DOWN, previous=UP]
[2022-08-29 20:02:52] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:02:52] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:02:52] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:646) --- Waiting for workers to finish.
[2022-08-29 20:02:52] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:649) --- Successfully waited for workers to finish.
[2022-08-29 20:02:52] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:181) --- stopped bean 'inbound.springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg'
[2022-08-29 20:02:52] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg.errors' has 1 subscriber(s).
[2022-08-29 20:02:52] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.Gu3ngxkfTG2wLqJy7HSEdg.errors' has 0 subscriber(s).
[2022-08-29 20:02:52] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:02:52] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 0 subscriber(s).
[2022-08-29 20:02:52] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:199) --- stopped bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:02:52] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:02:52] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'taskScheduler'
[2022-08-29 20:02:52] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) --- HikariPool-1 - Shutdown initiated...
[2022-08-29 20:02:52] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) --- HikariPool-1 - Shutdown completed.
[2022-08-29 20:02:52] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:935) --- Shutting down DiscoveryClient ...
[2022-08-29 20:02:55] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:971) --- Unregistering ...
[2022-08-29 20:02:55] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:973) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[2022-08-29 20:02:55] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:960) --- Completed shut down of DiscoveryClient
[2022-08-29 20:52:50] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:308) --- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[2022-08-29 20:52:50] INFO:org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) --- Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2022-08-29 20:52:50] INFO:org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) --- Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2022-08-29 20:52:50] INFO:org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:237) --- Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[2022-08-29 20:52:50] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:248) --- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[2022-08-29 20:52:50] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:177) --- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4218500f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bff64c2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b2c4efb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c35172e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c2db68f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3cc41abc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4566d049, org.springframework.test.context.event.EventPublishingTestExecutionListener@61ce23ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3668d4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c3b9394, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6f2cfcc2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f6f61c8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4c2cc639, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ccb4b1b]
[2022-08-29 20:52:50] INFO:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) --- HV000001: Hibernate Validator 6.1.7.Final
[2022-08-29 20:52:50] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:52:51] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:52:51] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:52:51] INFO:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) --- No active profile set, falling back to default profiles: default
[2022-08-29 20:52:52] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:52:52] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) --- Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[2022-08-29 20:52:52] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) --- Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[2022-08-29 20:52:52] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:52:52] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:52:52] INFO:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) --- BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[2022-08-29 20:52:52] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:213) --- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[2022-08-29 20:52:52] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:300) --- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[2022-08-29 20:52:52] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerHeaderChannelRegistry(DefaultConfiguringBeanFactoryPostProcessor.java:460) --- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[2022-08-29 20:52:52] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:52] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:53] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$56145b73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:53] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:53] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:53] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:52:53] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:52:53] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:52:53] INFO:com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) --- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5d800a56
[2022-08-29 20:52:53] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'taskScheduler'
[2022-08-29 20:52:53] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:52:54] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:52:54] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:52:54] INFO:org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) --- Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-08-29 20:52:55] INFO:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) --- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2022-08-29 20:52:55] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:52:55] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:52:55] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:52:55] INFO:org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar.afterPropertiesSet(FunctionConfiguration.java:755) --- Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[2022-08-29 20:52:55] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) --- HikariPool-1 - Starting...
[2022-08-29 20:52:56] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) --- HikariPool-1 - Start completed.
[2022-08-29 20:52:56] INFO:org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:78) --- Eureka HTTP Client uses Jersey
[2022-08-29 20:52:56] WARN:org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) --- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 20:52:56] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[2022-08-29 20:52:56] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:52:56] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 1 subscriber(s).
[2022-08-29 20:52:56] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:52:56] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:243) --- Creating binder: rabbit
[2022-08-29 20:52:56] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:52:57] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:52:57] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:52:57] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:365) --- Caching the binder: rabbit
[2022-08-29 20:52:57] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:52:57] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:558) --- Attempting to connect to: [localhost:5672]
[2022-08-29 20:52:57] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:511) --- Created new connection: rabbitConnectionFactory#1ed12d10:0/SimpleConnection@74bca236 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 53298]
[2022-08-29 20:52:57] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[2022-08-29 20:52:57] INFO:org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) --- Setting initial instance status as: STARTING
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:372) --- Initializing Eureka in region us-east-1
[2022-08-29 20:52:57] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) --- Using JSON encoding codec LegacyJacksonJson
[2022-08-29 20:52:57] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) --- Using JSON decoding codec LegacyJacksonJson
[2022-08-29 20:52:57] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) --- Using XML encoding codec XStreamXml
[2022-08-29 20:52:57] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) --- Using XML decoding codec XStreamXml
[2022-08-29 20:52:57] INFO:com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) --- Resolving eureka endpoints via configuration
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1007) --- Disable delta property : false
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1008) --- Single vip registry refresh property : null
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1009) --- Force full registry fetch : false
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1010) --- Application is null : false
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1011) --- Registered Applications size is zero : true
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1013) --- Application version is -1: true
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1097) --- Getting all instance registry info from the eureka server
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1106) --- The response status is 200
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1321) --- Starting heartbeat executor: renew interval is: 30
[2022-08-29 20:52:57] INFO:com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) --- InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:492) --- Discovery Client initialized at timestamp 1661777577717 with initial instances count: 4
[2022-08-29 20:52:57] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) --- Registering application CLIENTADMINISTRATORS with eureka with status UP
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661777577722, current=UP, previous=STARTING]
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:52:57] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:52:57] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:52:57] INFO:org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner.doProvisionConsumerDestination(RabbitExchangeQueueProvisioner.java:237) --- declaring queue for inbound: springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg, bound to: springCloudBus
[2022-08-29 20:52:57] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg.errors' has 1 subscriber(s).
[2022-08-29 20:52:57] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg.errors' has 2 subscriber(s).
[2022-08-29 20:52:57] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean 'inbound.springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg'
[2022-08-29 20:52:57] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) --- Context refreshed
[2022-08-29 20:52:57] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) --- Found 1 custom documentation plugin(s)
[2022-08-29 20:52:57] INFO:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) --- Scanning for api listing references
[2022-08-29 20:52:58] INFO:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) --- Started ModuleRegisterApplicationTests in 7.782 seconds (JVM running for 8.809)
[2022-08-29 20:52:58] ERROR:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) --- 打印error
[2022-08-29 20:52:58] WARN:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) --- 打印warn
[2022-08-29 20:52:58] INFO:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:20) --- 打印info
[2022-08-29 20:52:58] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) --- Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[2022-08-29 20:52:58] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661777578160, current=DOWN, previous=UP]
[2022-08-29 20:52:58] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:52:58] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:52:58] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:646) --- Waiting for workers to finish.
[2022-08-29 20:52:58] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:649) --- Successfully waited for workers to finish.
[2022-08-29 20:52:58] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:181) --- stopped bean 'inbound.springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg'
[2022-08-29 20:52:58] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg.errors' has 1 subscriber(s).
[2022-08-29 20:52:58] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.S_WunsviQ1qDzd7k5VxjOg.errors' has 0 subscriber(s).
[2022-08-29 20:52:58] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:52:58] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 0 subscriber(s).
[2022-08-29 20:52:58] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:199) --- stopped bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:52:58] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:52:58] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'taskScheduler'
[2022-08-29 20:52:58] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) --- HikariPool-1 - Shutdown initiated...
[2022-08-29 20:52:58] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) --- HikariPool-1 - Shutdown completed.
[2022-08-29 20:52:58] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:935) --- Shutting down DiscoveryClient ...
[2022-08-29 20:53:01] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:971) --- Unregistering ...
[2022-08-29 20:53:01] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:973) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[2022-08-29 20:53:01] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:960) --- Completed shut down of DiscoveryClient
[2022-08-29 20:58:23] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:308) --- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[2022-08-29 20:58:23] INFO:org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) --- Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2022-08-29 20:58:23] INFO:org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) --- Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2022-08-29 20:58:23] INFO:org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:237) --- Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[2022-08-29 20:58:23] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:248) --- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[2022-08-29 20:58:23] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:177) --- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4218500f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bff64c2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b2c4efb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c35172e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c2db68f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3cc41abc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4566d049, org.springframework.test.context.event.EventPublishingTestExecutionListener@61ce23ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3668d4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c3b9394, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6f2cfcc2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f6f61c8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4c2cc639, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ccb4b1b]
[2022-08-29 20:58:23] INFO:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) --- HV000001: Hibernate Validator 6.1.7.Final
[2022-08-29 20:58:24] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:58:25] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:58:25] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:58:25] INFO:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) --- No active profile set, falling back to default profiles: default
[2022-08-29 20:58:26] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:58:26] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) --- Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[2022-08-29 20:58:26] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) --- Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[2022-08-29 20:58:26] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:58:26] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 20:58:26] INFO:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) --- BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[2022-08-29 20:58:26] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:213) --- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[2022-08-29 20:58:26] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:300) --- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[2022-08-29 20:58:26] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerHeaderChannelRegistry(DefaultConfiguringBeanFactoryPostProcessor.java:460) --- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$8f1dda66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:26] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 20:58:27] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:58:27] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:58:27] INFO:com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) --- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2ffa91dc
[2022-08-29 20:58:27] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'taskScheduler'
[2022-08-29 20:58:27] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:58:28] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:58:28] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 20:58:29] INFO:org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) --- Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-08-29 20:58:29] INFO:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) --- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2022-08-29 20:58:29] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 20:58:29] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 20:58:29] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:58:29] INFO:org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar.afterPropertiesSet(FunctionConfiguration.java:755) --- Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[2022-08-29 20:58:30] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) --- HikariPool-1 - Starting...
[2022-08-29 20:58:30] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) --- HikariPool-1 - Start completed.
[2022-08-29 20:58:30] INFO:org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:78) --- Eureka HTTP Client uses Jersey
[2022-08-29 20:58:30] WARN:org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) --- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 20:58:30] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[2022-08-29 20:58:30] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:58:30] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 1 subscriber(s).
[2022-08-29 20:58:30] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:58:30] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:243) --- Creating binder: rabbit
[2022-08-29 20:58:30] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 20:58:32] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 20:58:32] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 20:58:32] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:365) --- Caching the binder: rabbit
[2022-08-29 20:58:32] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:58:32] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:558) --- Attempting to connect to: [localhost:5672]
[2022-08-29 20:58:32] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:511) --- Created new connection: rabbitConnectionFactory#1ead3c67:0/SimpleConnection@5d41b929 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 40274]
[2022-08-29 20:58:32] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[2022-08-29 20:58:32] INFO:org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) --- Setting initial instance status as: STARTING
[2022-08-29 20:58:32] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:372) --- Initializing Eureka in region us-east-1
[2022-08-29 20:58:32] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) --- Using JSON encoding codec LegacyJacksonJson
[2022-08-29 20:58:32] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) --- Using JSON decoding codec LegacyJacksonJson
[2022-08-29 20:58:32] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) --- Using XML encoding codec XStreamXml
[2022-08-29 20:58:32] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) --- Using XML decoding codec XStreamXml
[2022-08-29 20:58:33] INFO:com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) --- Resolving eureka endpoints via configuration
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1007) --- Disable delta property : false
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1008) --- Single vip registry refresh property : null
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1009) --- Force full registry fetch : false
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1010) --- Application is null : false
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1011) --- Registered Applications size is zero : true
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1013) --- Application version is -1: true
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1097) --- Getting all instance registry info from the eureka server
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1106) --- The response status is 200
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1321) --- Starting heartbeat executor: renew interval is: 30
[2022-08-29 20:58:33] INFO:com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) --- InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:492) --- Discovery Client initialized at timestamp 1661777913139 with initial instances count: 4
[2022-08-29 20:58:33] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) --- Registering application CLIENTADMINISTRATORS with eureka with status UP
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661777913146, current=UP, previous=STARTING]
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:58:33] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:58:33] INFO:org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner.doProvisionConsumerDestination(RabbitExchangeQueueProvisioner.java:237) --- declaring queue for inbound: springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA, bound to: springCloudBus
[2022-08-29 20:58:33] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA.errors' has 1 subscriber(s).
[2022-08-29 20:58:33] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA.errors' has 2 subscriber(s).
[2022-08-29 20:58:33] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean 'inbound.springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA'
[2022-08-29 20:58:33] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) --- Context refreshed
[2022-08-29 20:58:33] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) --- Found 1 custom documentation plugin(s)
[2022-08-29 20:58:33] INFO:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) --- Scanning for api listing references
[2022-08-29 20:58:33] INFO:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) --- Started ModuleRegisterApplicationTests in 9.76 seconds (JVM running for 10.997)
[2022-08-29 20:58:33] ERROR:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) --- 打印error
[2022-08-29 20:58:33] WARN:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) --- 打印warn
[2022-08-29 20:58:33] INFO:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:20) --- 打印info
[2022-08-29 20:58:33] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) --- Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661777913573, current=DOWN, previous=UP]
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 20:58:33] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 20:58:33] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:646) --- Waiting for workers to finish.
[2022-08-29 20:58:34] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:649) --- Successfully waited for workers to finish.
[2022-08-29 20:58:34] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:181) --- stopped bean 'inbound.springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA'
[2022-08-29 20:58:34] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA.errors' has 1 subscriber(s).
[2022-08-29 20:58:34] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.WwNRLbE1T7OmFvlMn2zRxA.errors' has 0 subscriber(s).
[2022-08-29 20:58:34] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 20:58:34] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 0 subscriber(s).
[2022-08-29 20:58:34] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:199) --- stopped bean '_org.springframework.integration.errorLogger'
[2022-08-29 20:58:34] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'applicationTaskExecutor'
[2022-08-29 20:58:34] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'taskScheduler'
[2022-08-29 20:58:34] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) --- HikariPool-1 - Shutdown initiated...
[2022-08-29 20:58:34] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) --- HikariPool-1 - Shutdown completed.
[2022-08-29 20:58:34] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:935) --- Shutting down DiscoveryClient ...
[2022-08-29 20:58:37] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:971) --- Unregistering ...
[2022-08-29 20:58:37] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:973) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[2022-08-29 20:58:37] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:960) --- Completed shut down of DiscoveryClient
[2022-08-29 21:00:09] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:00:09] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:00:09] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:00:10] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 21:00:12] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 21:00:13] WARN:org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) --- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 21:00:15] ERROR:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) --- 打印error
[2022-08-29 21:00:15] WARN:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) --- 打印warn
[2022-08-29 21:02:37] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:308) --- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[2022-08-29 21:02:37] INFO:org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) --- Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2022-08-29 21:02:37] INFO:org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) --- Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2022-08-29 21:02:37] INFO:org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:237) --- Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[2022-08-29 21:02:37] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:248) --- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[2022-08-29 21:02:37] INFO:org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:177) --- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@681a8b4e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5cbe877d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5c08c46a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4cf8b2dc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@708400f6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5829e4f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4218500f, org.springframework.test.context.event.EventPublishingTestExecutionListener@4bff64c2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1b2c4efb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c35172e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c2db68f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3cc41abc, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4566d049, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61ce23ac]
[2022-08-29 21:02:37] INFO:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) --- HV000001: Hibernate Validator 6.1.7.Final
[2022-08-29 21:02:37] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 21:02:38] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 21:02:38] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 21:02:38] INFO:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) --- No active profile set, falling back to default profiles: default
[2022-08-29 21:02:39] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:02:39] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) --- Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[2022-08-29 21:02:39] INFO:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) --- Finished Spring Data repository scanning in 5ms. Found 0 JDBC repository interfaces.
[2022-08-29 21:02:39] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:02:39] WARN:org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:155) --- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-08-29 21:02:39] INFO:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) --- BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[2022-08-29 21:02:39] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:213) --- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[2022-08-29 21:02:39] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:300) --- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[2022-08-29 21:02:39] INFO:org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerHeaderChannelRegistry(DefaultConfiguringBeanFactoryPostProcessor.java:460) --- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$7eea87c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] INFO:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:335) --- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-08-29 21:02:40] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 21:02:40] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 21:02:40] INFO:com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) --- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@186481d4
[2022-08-29 21:02:40] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'taskScheduler'
[2022-08-29 21:02:40] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 21:02:41] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 21:02:41] INFO:org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:378) --- For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[2022-08-29 21:02:42] INFO:org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) --- Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-08-29 21:02:42] INFO:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) --- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2022-08-29 21:02:42] WARN:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:126) --- No URLs will be polled as dynamic configuration sources.
[2022-08-29 21:02:42] INFO:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:127) --- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-08-29 21:02:42] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) --- Initializing ExecutorService 'applicationTaskExecutor'
[2022-08-29 21:02:42] INFO:org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar.afterPropertiesSet(FunctionConfiguration.java:755) --- Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[2022-08-29 21:02:43] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) --- HikariPool-1 - Starting...
[2022-08-29 21:02:43] INFO:com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) --- HikariPool-1 - Start completed.
[2022-08-29 21:02:43] INFO:org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:78) --- Eureka HTTP Client uses Jersey
[2022-08-29 21:02:43] WARN:org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(BlockingLoadBalancerClientAutoConfiguration.java:106) --- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-08-29 21:02:43] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[2022-08-29 21:02:43] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 21:02:43] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 1 subscriber(s).
[2022-08-29 21:02:43] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean '_org.springframework.integration.errorLogger'
[2022-08-29 21:02:43] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:243) --- Creating binder: rabbit
[2022-08-29 21:02:43] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.getRemoteEnvironment(ConfigServicePropertySourceLocator.java:256) --- Fetching config from server at : http://localhost:9999
[2022-08-29 21:02:44] INFO:org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.log(ConfigServicePropertySourceLocator.java:175) --- Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[2022-08-29 21:02:44] INFO:org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:112) --- Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[2022-08-29 21:02:44] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:365) --- Caching the binder: rabbit
[2022-08-29 21:02:44] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 21:02:44] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:558) --- Attempting to connect to: [localhost:5672]
[2022-08-29 21:02:44] INFO:org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:511) --- Created new connection: rabbitConnectionFactory#7d47b021:0/SimpleConnection@5aad4194 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 37668]
[2022-08-29 21:02:44] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[2022-08-29 21:02:44] INFO:org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) --- Setting initial instance status as: STARTING
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:372) --- Initializing Eureka in region us-east-1
[2022-08-29 21:02:44] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) --- Using JSON encoding codec LegacyJacksonJson
[2022-08-29 21:02:44] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) --- Using JSON decoding codec LegacyJacksonJson
[2022-08-29 21:02:44] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) --- Using XML encoding codec XStreamXml
[2022-08-29 21:02:44] INFO:com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) --- Using XML decoding codec XStreamXml
[2022-08-29 21:02:44] INFO:com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) --- Resolving eureka endpoints via configuration
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1007) --- Disable delta property : false
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1008) --- Single vip registry refresh property : null
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1009) --- Force full registry fetch : false
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1010) --- Application is null : false
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1011) --- Registered Applications size is zero : true
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1013) --- Application version is -1: true
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1097) --- Getting all instance registry info from the eureka server
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1106) --- The response status is 200
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1321) --- Starting heartbeat executor: renew interval is: 30
[2022-08-29 21:02:44] INFO:com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) --- InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:492) --- Discovery Client initialized at timestamp 1661778164932 with initial instances count: 4
[2022-08-29 21:02:44] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) --- Registering application CLIENTADMINISTRATORS with eureka with status UP
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661778164937, current=UP, previous=STARTING]
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 21:02:44] INFO:org.springframework.cloud.stream.binder.DefaultBinderFactory.getBinderInstance(DefaultBinderFactory.java:369) --- Retrieving cached binder: rabbit
[2022-08-29 21:02:44] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 21:02:44] INFO:org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner.doProvisionConsumerDestination(RabbitExchangeQueueProvisioner.java:237) --- declaring queue for inbound: springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg, bound to: springCloudBus
[2022-08-29 21:02:45] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg.errors' has 1 subscriber(s).
[2022-08-29 21:02:45] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg.errors' has 2 subscriber(s).
[2022-08-29 21:02:45] INFO:org.springframework.integration.endpoint.AbstractEndpoint.start(AbstractEndpoint.java:163) --- started bean 'inbound.springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg'
[2022-08-29 21:02:45] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) --- Context refreshed
[2022-08-29 21:02:45] INFO:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) --- Found 1 custom documentation plugin(s)
[2022-08-29 21:02:45] INFO:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) --- Scanning for api listing references
[2022-08-29 21:02:45] INFO:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) --- Started ModuleRegisterApplicationTests in 7.843 seconds (JVM running for 8.988)
[2022-08-29 21:02:45] ERROR:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:18) --- 打印error
[2022-08-29 21:02:45] WARN:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:19) --- 打印warn
[2022-08-29 21:02:45] INFO:com.example.administrators.ModuleRegisterApplicationTests.contextLoads(ModuleRegisterApplicationTests.java:20) --- 打印info
[2022-08-29 21:02:45] INFO:org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) --- Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[2022-08-29 21:02:45] INFO:com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1352) --- Saw local status change event StatusChangeEvent [timestamp=1661778165321, current=DOWN, previous=UP]
[2022-08-29 21:02:45] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[2022-08-29 21:02:45] INFO:com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:882) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[2022-08-29 21:02:45] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:646) --- Waiting for workers to finish.
[2022-08-29 21:02:46] INFO:org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:649) --- Successfully waited for workers to finish.
[2022-08-29 21:02:46] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:181) --- stopped bean 'inbound.springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg'
[2022-08-29 21:02:46] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg.errors' has 1 subscriber(s).
[2022-08-29 21:02:46] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.springCloudBus.anonymous.Trt6u1IiTGGWCuD0KdaMgg.errors' has 0 subscriber(s).
[2022-08-29 21:02:46] INFO:org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:107) --- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[2022-08-29 21:02:46] INFO:org.springframework.integration.channel.AbstractSubscribableChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:64) --- Channel 'application-1.errorChannel' has 0 subscriber(s).
[2022-08-29 21:02:46] INFO:org.springframework.integration.endpoint.AbstractEndpoint.stop(AbstractEndpoint.java:199) --- stopped bean '_org.springframework.integration.errorLogger'
[2022-08-29 21:02:46] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'applicationTaskExecutor'
[2022-08-29 21:02:46] INFO:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) --- Shutting down ExecutorService 'taskScheduler'
[2022-08-29 21:02:46] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) --- HikariPool-1 - Shutdown initiated...
[2022-08-29 21:02:46] INFO:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) --- HikariPool-1 - Shutdown completed.
[2022-08-29 21:02:46] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:935) --- Shutting down DiscoveryClient ...
[2022-08-29 21:02:49] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:971) --- Unregistering ...
[2022-08-29 21:02:49] INFO:com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:973) --- DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[2022-08-29 21:02:49] INFO:com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:960) --- Completed shut down of DiscoveryClient
