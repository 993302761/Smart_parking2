[21:52:41.691 INFO ] [org.springframework.test.context.support.AbstractTestContextBootstrapper 308 buildDefaultMergedContextConfiguration] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.administrators.ModuleRegisterApplicationTests], using SpringBootContextLoader
[21:52:41.706 INFO ] [org.springframework.test.context.support.AbstractContextLoader 264 generateDefaultLocations] - Could not detect default resource locations for test class [com.example.administrators.ModuleRegisterApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[21:52:41.708 INFO ] [org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 83 detectDefaultConfigurationClasses] - Could not detect default configuration classes for test class [com.example.administrators.ModuleRegisterApplicationTests]: ModuleRegisterApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[21:52:41.811 INFO ] [org.springframework.boot.test.context.SpringBootTestContextBootstrapper 237 getOrFindConfigurationClasses] - Found @SpringBootConfiguration com.example.administrators.AdministratorsApplication for test class com.example.administrators.ModuleRegisterApplicationTests
[21:52:41.922 INFO ] [org.springframework.test.context.support.AbstractTestContextBootstrapper 248 getDefaultTestExecutionListenerClassNames] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[21:52:41.937 INFO ] [org.springframework.test.context.support.AbstractTestContextBootstrapper 177 getTestExecutionListeners] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c2cc639, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ccb4b1b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4097cac, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ec2cc4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a5b3fee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c1e2a2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@333dd51e, org.springframework.test.context.event.EventPublishingTestExecutionListener@52d645b1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2101b44a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2cc3ad05, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@710b18a6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@119020fb, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3d9f6567, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@c055c54]
[21:52:42.279 INFO ] [org.hibernate.validator.internal.util.Version 21 <clinit>] - HV000001: Hibernate Validator 6.1.7.Final
[21:52:42.760 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 256 getRemoteEnvironment] - Fetching config from server at : http://localhost:9999
[21:52:43.603 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 175 log] - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[21:52:43.604 INFO ] [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 112 initialize] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[21:52:43.633 INFO ] [org.springframework.boot.SpringApplication 651 logStartupProfileInfo] - No active profile set, falling back to default profiles: default
[21:52:44.275 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'bus-env' contains invalid characters, please migrate to a valid format.
[21:52:44.425 INFO ] [org.springframework.data.repository.config.RepositoryConfigurationDelegate 127 registerRepositoriesIn] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[21:52:44.431 INFO ] [org.springframework.data.repository.config.RepositoryConfigurationDelegate 187 registerRepositoriesIn] - Finished Spring Data repository scanning in 4ms. Found 0 JDBC repository interfaces.
[21:52:44.458 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'bus-refresh' contains invalid characters, please migrate to a valid format.
[21:52:44.512 WARN ] [org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[21:52:44.681 INFO ] [org.springframework.cloud.context.scope.GenericScope 295 setSerializationId] - BeanFactory id=59aa1c0d-1aad-3007-9822-0fa35bf10725
[21:52:44.735 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 213 registerErrorChannel] - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[21:52:44.739 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 300 registerTaskScheduler] - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
[21:52:44.743 INFO ] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor 460 registerHeaderChannelRegistry] - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[21:52:44.973 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:44.976 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:45.001 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$dc1c1e97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:45.014 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:45.016 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:45.032 INFO ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 335 postProcessAfterInitialization] - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[21:52:45.529 WARN ] [com.netflix.config.sources.URLConfigurationSource 126 <init>] - No URLs will be polled as dynamic configuration sources.
[21:52:45.530 INFO ] [com.netflix.config.sources.URLConfigurationSource 127 <init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[21:52:45.541 INFO ] [com.netflix.config.DynamicPropertyFactory 281 getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5af38a4a
[21:52:45.722 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 181 initialize] - Initializing ExecutorService 'taskScheduler'
[21:52:45.809 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientUser' URL not provided. Will try picking an instance via load-balancing.
[21:52:46.061 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientParkingLots' URL not provided. Will try picking an instance via load-balancing.
[21:52:46.090 INFO ] [org.springframework.cloud.openfeign.FeignClientFactoryBean 378 getTarget] - For 'ClientOrder' URL not provided. Will try picking an instance via load-balancing.
[21:52:46.988 INFO ] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init>] - Exposing 22 endpoint(s) beneath base path '/actuator'
[21:52:47.229 INFO ] [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping 69 initHandlerMethods] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[21:52:47.312 WARN ] [com.netflix.config.sources.URLConfigurationSource 126 <init>] - No URLs will be polled as dynamic configuration sources.
[21:52:47.312 INFO ] [com.netflix.config.sources.URLConfigurationSource 127 <init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[21:52:47.432 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 181 initialize] - Initializing ExecutorService 'applicationTaskExecutor'
[21:52:47.740 INFO ] [org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar 755 afterPropertiesSet] - Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
[21:52:47.938 INFO ] [com.zaxxer.hikari.HikariDataSource 110 getConnection] - HikariPool-1 - Starting...
[21:52:48.118 INFO ] [com.zaxxer.hikari.HikariDataSource 123 getConnection] - HikariPool-1 - Start completed.
[21:52:48.223 INFO ] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration 78 discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
[21:52:48.267 WARN ] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning] - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[21:52:48.432 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBusInput' has 1 subscriber(s).
[21:52:48.444 INFO ] [org.springframework.integration.endpoint.EventDrivenConsumer 107 logComponentSubscriptionEvent] - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[21:52:48.444 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.errorChannel' has 1 subscriber(s).
[21:52:48.445 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 163 start] - started bean '_org.springframework.integration.errorLogger'
[21:52:48.446 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 243 getBinderInstance] - Creating binder: rabbit
[21:52:48.496 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 256 getRemoteEnvironment] - Fetching config from server at : http://localhost:9999
[21:52:49.221 INFO ] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator 175 log] - Located environment: name=SmartParkingServer, profiles=[data], label=master, version=43004183376da3b898424e884c3fe0b7301a0951, state=null
[21:52:49.221 INFO ] [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 112 initialize] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #1)'}, BootstrapPropertySource {name='bootstrapProperties-https://gitee.com/lei-yu-qi/smart_parking_config.git/SmartParkingServer.yml (document #0)'}]
[21:52:49.329 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 365 getBinderInstance] - Caching the binder: rabbit
[21:52:49.329 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 369 getBinderInstance] - Retrieving cached binder: rabbit
[21:52:49.424 INFO ] [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory 558 connectAddresses] - Attempting to connect to: [localhost:5672]
[21:52:49.477 INFO ] [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory 511 createBareConnection] - Created new connection: rabbitConnectionFactory#7944c323:0/SimpleConnection@5091456c [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60888]
[21:52:49.513 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBusOutput' has 1 subscriber(s).
[21:52:49.529 INFO ] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory 72 create] - Setting initial instance status as: STARTING
[21:52:49.561 INFO ] [com.netflix.discovery.DiscoveryClient 372 <init>] - Initializing Eureka in region us-east-1
[21:52:49.599 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 70 <init>] - Using JSON encoding codec LegacyJacksonJson
[21:52:49.599 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 71 <init>] - Using JSON decoding codec LegacyJacksonJson
[21:52:49.707 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 80 <init>] - Using XML encoding codec XStreamXml
[21:52:49.707 INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider 81 <init>] - Using XML decoding codec XStreamXml
[21:52:49.843 INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver 43 getClusterEndpoints] - Resolving eureka endpoints via configuration
[21:52:49.859 INFO ] [com.netflix.discovery.DiscoveryClient 1007 fetchRegistry] - Disable delta property : false
[21:52:49.859 INFO ] [com.netflix.discovery.DiscoveryClient 1008 fetchRegistry] - Single vip registry refresh property : null
[21:52:49.859 INFO ] [com.netflix.discovery.DiscoveryClient 1009 fetchRegistry] - Force full registry fetch : false
[21:52:49.859 INFO ] [com.netflix.discovery.DiscoveryClient 1010 fetchRegistry] - Application is null : false
[21:52:49.859 INFO ] [com.netflix.discovery.DiscoveryClient 1011 fetchRegistry] - Registered Applications size is zero : true
[21:52:49.860 INFO ] [com.netflix.discovery.DiscoveryClient 1013 fetchRegistry] - Application version is -1: true
[21:52:49.860 INFO ] [com.netflix.discovery.DiscoveryClient 1097 getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
[21:52:49.962 INFO ] [com.netflix.discovery.DiscoveryClient 1106 getAndStoreFullRegistry] - The response status is 200
[21:52:49.965 INFO ] [com.netflix.discovery.DiscoveryClient 1321 initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
[21:52:49.968 INFO ] [com.netflix.discovery.InstanceInfoReplicator 60 <init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[21:52:49.970 INFO ] [com.netflix.discovery.DiscoveryClient 492 <init>] - Discovery Client initialized at timestamp 1661781169969 with initial instances count: 4
[21:52:49.976 INFO ] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry 41 register] - Registering application CLIENTADMINISTRATORS with eureka with status UP
[21:52:49.976 INFO ] [com.netflix.discovery.DiscoveryClient$3 1352 notify] - Saw local status change event StatusChangeEvent [timestamp=1661781169976, current=UP, previous=STARTING]
[21:52:49.978 INFO ] [com.netflix.discovery.DiscoveryClient 873 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[21:52:49.978 INFO ] [org.springframework.cloud.stream.binder.DefaultBinderFactory 369 getBinderInstance] - Retrieving cached binder: rabbit
[21:52:50.020 INFO ] [com.netflix.discovery.DiscoveryClient 882 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[21:52:50.038 INFO ] [org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner 237 doProvisionConsumerDestination] - declaring queue for inbound: springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA, bound to: springCloudBus
[21:52:50.062 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA.errors' has 1 subscriber(s).
[21:52:50.062 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA.errors' has 2 subscriber(s).
[21:52:50.076 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 163 start] - started bean 'inbound.springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA'
[21:52:50.077 INFO ] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 160 start] - Context refreshed
[21:52:50.089 INFO ] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper 163 start] - Found 1 custom documentation plugin(s)
[21:52:50.125 INFO ] [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner 41 scan] - Scanning for api listing references
[21:52:50.256 INFO ] [org.springframework.boot.StartupInfoLogger 61 logStarted] - Started ModuleRegisterApplicationTests in 8.231 seconds (JVM running for 9.668)
[21:52:50.397 ERROR] [com.example.administrators.ModuleRegisterApplicationTests 18 contextLoads] - 打印error
[21:52:50.397 WARN ] [com.example.administrators.ModuleRegisterApplicationTests 19 contextLoads] - 打印warn
[21:52:50.397 INFO ] [com.example.administrators.ModuleRegisterApplicationTests 20 contextLoads] - 打印info
[21:52:50.408 INFO ] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry 65 deregister] - Unregistering application CLIENTADMINISTRATORS with eureka with status DOWN
[21:52:50.409 INFO ] [com.netflix.discovery.DiscoveryClient$3 1352 notify] - Saw local status change event StatusChangeEvent [timestamp=1661781170409, current=DOWN, previous=UP]
[21:52:50.409 INFO ] [com.netflix.discovery.DiscoveryClient 873 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000: registering service...
[21:52:50.412 INFO ] [com.netflix.discovery.DiscoveryClient 882 register] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - registration status: 204
[21:52:50.419 INFO ] [org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer 646 doShutdown] - Waiting for workers to finish.
[21:52:51.080 INFO ] [org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer 649 doShutdown] - Successfully waited for workers to finish.
[21:52:51.080 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 181 stop] - stopped bean 'inbound.springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA'
[21:52:51.087 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA.errors' has 1 subscriber(s).
[21:52:51.089 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.springCloudBus.anonymous.II1zVFZyQ66AQB8WrQApfA.errors' has 0 subscriber(s).
[21:52:51.096 INFO ] [org.springframework.integration.endpoint.EventDrivenConsumer 107 logComponentSubscriptionEvent] - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[21:52:51.096 INFO ] [org.springframework.integration.channel.AbstractSubscribableChannel 64 adjustCounterIfNecessary] - Channel 'application-1.errorChannel' has 0 subscriber(s).
[21:52:51.097 INFO ] [org.springframework.integration.endpoint.AbstractEndpoint 199 stop] - stopped bean '_org.springframework.integration.errorLogger'
[21:52:51.101 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 218 shutdown] - Shutting down ExecutorService 'applicationTaskExecutor'
[21:52:51.116 INFO ] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 218 shutdown] - Shutting down ExecutorService 'taskScheduler'
[21:52:51.121 INFO ] [com.zaxxer.hikari.HikariDataSource 350 close] - HikariPool-1 - Shutdown initiated...
[21:52:51.127 INFO ] [com.zaxxer.hikari.HikariDataSource 352 close] - HikariPool-1 - Shutdown completed.
[21:52:51.128 INFO ] [com.netflix.discovery.DiscoveryClient 935 shutdown] - Shutting down DiscoveryClient ...
[21:52:54.133 INFO ] [com.netflix.discovery.DiscoveryClient 971 unregister] - Unregistering ...
[21:52:54.142 INFO ] [com.netflix.discovery.DiscoveryClient 973 unregister] - DiscoveryClient_CLIENTADMINISTRATORS/10.12.65.75:ClientAdministrators:9000 - deregister  status: 200
[21:52:54.169 INFO ] [com.netflix.discovery.DiscoveryClient 960 shutdown] - Completed shut down of DiscoveryClient
