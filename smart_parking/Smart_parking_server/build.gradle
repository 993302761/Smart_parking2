
apply plugin: 'org.springframework.boot'


//配置子模块依赖
subprojects {

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
    }

    // 配置依赖排除规则，排除所有该依赖
    configurations.implementation {

        exclude group: 'org.springframework.boot' , module: 'spring-boot-starter-logging'

    }

    dependencies {

        implementation ('org.springframework.boot:spring-boot-starter-web')

        implementation("org.springframework.boot:spring-boot-starter-parent:${spring_boot_version}")

        implementation('org.apache.commons:commons-lang3:3.12.0')



        //mysql
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation "mysql:mysql-connector-java:${mysql_connection_version}"

        //mybatis   Mybatis-Plus是一个Mybatis的增强工具
        implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2')
//        implementation("com.baomidou:mybatis-plus-boot-starter:3.4.3")


        //swagger
        implementation("io.springfox:springfox-swagger2:${swagger_version}")
        implementation("io.springfox:springfox-swagger-ui:${swagger_version}")



        //Eureka-Client
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-archaius'



        //一个Lombok为啥写这么多？因为gradle5.0以上的版本都需要手动指定Lombok在编译期使用
        compileOnly("org.projectlombok:lombok:${lombok_version}")
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")
        testCompileOnly("org.projectlombok:lombok:${lombok_version}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombok_version}")


        //配置中心
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'


        //Feign
        implementation ('org.springframework.cloud:spring-cloud-starter-openfeign')
        implementation 'io.github.openfeign:feign-httpclient'

        //日志
        implementation('org.springframework.boot:spring-boot-starter-log4j2')

        //Hystrix
        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')


    }

}

